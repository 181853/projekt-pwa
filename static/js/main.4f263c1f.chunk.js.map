{"version":3,"sources":["context.js","hooks.js","components/like-button/index.js","constants.js","utils.js","views/home-page/index.js","components/avatar/index.js","views/header/index.js","views/layout/index.js","components/new-post-form/index.js","views/new-post/index.js","components/auth-form/index.js","components/post-comments/index.js","views/single-post/index.js","views/splash-screen/index.js","views/index.js","serviceWorker.js","index.js"],"names":["FirebaseContext","createContext","FirebaseProvider","children","app","apps","length","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","database","firestore","storage","enablePersistence","googleProvider","GoogleAuthProvider","githubProvider","GithubAuthProvider","getUser","uid","a","collection","doc","get","user","exists","data","console","log","Provider","value","createUserWithEmailAndPassword","email","password","signInWithEmailAndPassword","signInWithGoogle","signInWithPopup","signInWithGithub","signOut","getImage","postId","ref","createPost","set","getPosts","getPost","createUser","getPostComments","useAuth","useContext","useState","currentUser","isLoading","state","setState","onChange","useEffect","unsubscribe","onAuthStateChanged","LikeButton","likes","userId","isLiked","includes","Button","disabled","variant","style","pointerEvents","className","onClick","update","filter","icon","fasHeart","farHeart","ROUTES","REGISTRATION","LOGIN","POST","POST_NEW","HOME","ROOT","ERRORS","searchAddress","address","fetch","response","ok","json","features","formatDate","date","Intl","DateTimeFormat","month","day","hour","minute","format","HomePage","React","setLoading","postData","setData","onSnapshot","querySnapshot","sortedData","docs","map","documentSnapshot","id","sort","b","createdAt","Container","Row","Spinner","animation","post","title","description","imageURL","Col","md","lg","key","Card","Img","src","Body","Title","Text","as","Link","to","block","OverlayTrigger","placement","overlay","Tooltip","Footer","faClock","Avatar","photoURL","alt","loading","height","width","Header","history","useHistory","Navbar","expand","Brand","Toggle","aria-controls","Collapse","Nav","NavDropdown","alignRight","Item","displayName","Divider","then","push","Layout","Date","getFullYear","NewPostForm","postURL","setPostURL","Alert","onClose","dismissible","Heading","xs","onSubmit","values","setSubmitting","image","uuidv4","put","on","err","error","getDownloadURL","place_name","coordinates","center","authorId","now","initialValues","validate","errors","NewPost","searchTerm","setSearchTerm","results","setResults","isSearching","setIsSearching","debouncedSearchTerm","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","useDebounce","result","r","reduce","prev","next","handleSubmit","handleChange","handleBlur","touched","setFieldValue","setFieldError","isSubmitting","Form","noValidate","Group","controlId","Label","Control","type","name","autoComplete","onBlur","isInvalid","isValid","Feedback","rows","e","target","currentTarget","ListGroup","Boolean","Object","keys","location","action","preventDefault","File","custom","Input","accept","file","files","split","data-browse","AuthForm","isLoginForm","submitError","setSubmitError","authForm","cb","setIsLoading","additionalUserInfo","isNewUser","code","test","faGoogle","faGithub","PostComments","comment","setComment","commentsData","setCommentsData","Promise","all","docData","userDoc","author","index","add","catch","Map","lazy","SinglePost","match","params","postDoc","loadPost","fallback","Image","fluid","rounded","SplashScreen","Carousel","text","slide","color","Caption","href","label","link","rel","LogIn","Registration","App","exact","path","component","isLocalhost","window","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","document","getElementById","URL","origin","addEventListener","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.4f263c1f.chunk.js","sourcesContent":["import React, { createContext } from \"react\";\nimport app from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nexport const FirebaseContext = createContext(null);\n\nexport const FirebaseProvider = ({ children }) => {\n  if (!app.apps.length) {\n    app.initializeApp({\n      apiKey: process.env.REACT_APP_API_KEY,\n      authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n      databaseURL: process.env.REACT_APP_DATABASE_URL,\n      projectId: process.env.REACT_APP_PROJECT_ID,\n      storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n      messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n      appId: process.env.REACT_APP_APP_ID,\n    });\n  }\n\n  const auth = app.auth();\n  const database = app.firestore();\n  const storage = app.storage();\n\n  database.enablePersistence();\n\n  const googleProvider = new app.auth.GoogleAuthProvider();\n  const githubProvider = new app.auth.GithubAuthProvider();\n\n  const createUserWithEmailAndPassword = (email, password) =>\n    auth.createUserWithEmailAndPassword(email, password);\n\n  const signInWithEmailAndPassword = (email, password) =>\n    auth.signInWithEmailAndPassword(email, password);\n\n  const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\n\n  const signInWithGithub = () => auth.signInWithPopup(githubProvider);\n\n  const signOut = () => auth.signOut();\n\n  const getImage = (postId) => storage.ref(`/images/${postId}`);\n\n  const createPost = (uid, data) =>\n    database.collection(\"posts\").doc(uid).set(data);\n\n  const getPosts = () => database.collection(\"posts\");\n\n  const getPost = (postId) => database.collection(\"posts\").doc(postId);\n\n  const getUser = async (uid) => {\n    try {\n      const user = await database.collection(\"users\").doc(uid).get();\n\n      if (user.exists) {\n        return user.data();\n      }\n    } catch (err) {\n      console.log(\"getUser\", err);\n    }\n  };\n\n  const getPostComments = (uid) =>\n    database.collection(\"comments\").doc(uid).collection(\"values\");\n\n  const createUser = (postId, data) =>\n    database.collection(\"users\").doc(postId).set(data);\n\n  return (\n    <FirebaseContext.Provider\n      value={{\n        app,\n        auth,\n        createUserWithEmailAndPassword,\n        signInWithEmailAndPassword,\n        signInWithGoogle,\n        signInWithGithub,\n        signOut,\n        getImage,\n        createPost,\n        getPosts,\n        getPost,\n        getUser,\n        createUser,\n        getPostComments,\n      }}\n    >\n      {children}\n    </FirebaseContext.Provider>\n  );\n};\n","import { useEffect, useContext, useState } from \"react\";\nimport { FirebaseContext } from \"./context\";\n\nexport const useAuth = () => {\n  const { auth } = useContext(FirebaseContext);\n\n  const [state, setState] = useState(() => {\n    const user = auth.currentUser;\n    return { isLoading: !user, user };\n  });\n\n  function onChange(user) {\n    setState({ isLoading: false, user });\n  }\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(onChange);\n\n    return () => unsubscribe();\n  }, [auth]);\n\n  return {\n    user: state.user,\n    isLoading: state.isLoading,\n  };\n};\n\nexport const useDebounce = (value) => {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, 1000);\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value]);\n\n  return debouncedValue;\n};\n","import React, { useContext } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHeart as fasHeart } from \"@fortawesome/free-solid-svg-icons\";\nimport { faHeart as farHeart } from \"@fortawesome/free-regular-svg-icons\";\nimport { useAuth } from \"../../hooks\";\nimport { FirebaseContext } from \"../../context\";\n\nconst LikeButton = ({ postId, likes = [] }) => {\n  const { getPost } = useContext(FirebaseContext);\n  const { user } = useAuth();\n  const userId = user ? user.uid : null;\n\n  const isLiked = likes.includes(userId);\n\n  const addLike = () => {\n    getPost(postId).update({\n      likes: [...likes, userId],\n    });\n  };\n\n  const removeLike = () => {\n    getPost(postId).update({\n      likes: likes.filter((uid) => uid !== userId),\n    });\n  };\n\n  return (\n    <Button\n      disabled={!user}\n      variant={isLiked ? \"danger\" : \"outline-danger\"}\n      {...(!user && { style: { pointerEvents: \"none\" } })}\n      className=\"float-right\"\n      onClick={() => (user ? (isLiked ? removeLike() : addLike()) : {})}\n    >\n      <span className=\"mr-2\">{likes.length}</span>\n      <FontAwesomeIcon icon={isLiked ? fasHeart : farHeart} />\n    </Button>\n  );\n};\n\nexport default LikeButton;\n","export const ROUTES = {\n  REGISTRATION: process.env.PUBLIC_URL + \"/rejestracja\",\n  LOGIN: process.env.PUBLIC_URL + \"/logowanie\",\n  POST: process.env.PUBLIC_URL + \"/ogloszenie\",\n  POST_NEW: process.env.PUBLIC_URL + \"/nowe-ogloszenie\",\n  HOME: process.env.PUBLIC_URL + \"/home\",\n  ROOT: process.env.PUBLIC_URL + \"/\",\n};\n\nexport const ERRORS = {\n  \"auth/invalid-email\": \"Nieprawidłowy adres email.\",\n  \"auth/wrong-password\": \"Nieprawidłowe hasło.\",\n  \"auth/email-already-in-use\": \"Użytkownik o podanym emailu już istnieje.\",\n  \"auth/user-not-found\": \"Użytkownik nie istnieje.\",\n  \"auth/popup-closed-by-user\": \"Pop up zamknięty przez użytkownika.\",\n  \"auth/weak-password\": \"Hasło za słabe.\",\n};\n","export const searchAddress = async (address) => {\n  try {\n    const response = await fetch(\n      \"https://api.mapbox.com/geocoding/v5/mapbox.places/\" +\n        address +\n        \".json?access_token=\" +\n        process.env.REACT_APP_MAPBOX_API_KEY +\n        \"&autocomplete=false&country=pl&types=address%2Cpoi&language=pl\"\n    );\n\n    if (response.ok) {\n      const data = await response.json();\n\n      return data.features;\n    }\n\n    return [];\n  } catch (error) {\n    return [];\n  }\n};\n\nexport const formatDate = (date) =>\n  new Intl.DateTimeFormat(\"pl-PL\", {\n    month: \"short\",\n    day: \"numeric\",\n    hour: \"numeric\",\n    minute: \"numeric\",\n  }).format(date);\n","import React, { useContext, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport Tooltip from \"react-bootstrap/Tooltip\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faClock } from \"@fortawesome/free-regular-svg-icons\";\nimport LikeButton from \"../../components/like-button\";\nimport { ROUTES } from \"../../constants\";\nimport { formatDate } from \"../../utils\";\nimport { FirebaseContext } from \"../../context\";\nimport { useAuth } from \"../../hooks\";\n\nconst HomePage = () => {\n  const { getPosts } = useContext(FirebaseContext);\n  const { user } = useAuth();\n  const [isLoading, setLoading] = React.useState(false);\n  const [postData, setData] = React.useState(null);\n\n  useEffect(() => {\n    setLoading(true);\n\n    const unsubscribe = getPosts().onSnapshot((querySnapshot) => {\n      const sortedData = querySnapshot.docs\n        .map((documentSnapshot) => {\n          const data = documentSnapshot.data();\n\n          return {\n            id: documentSnapshot.id,\n            ...data,\n          };\n        })\n        .sort((a, b) => b.createdAt - a.createdAt);\n\n      setData(sortedData);\n      setLoading(false);\n    });\n\n    return () => {\n      unsubscribe();\n    };\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Container className=\"mt-5\">\n      <Row className=\"justify-content-center\">\n        {isLoading ? (\n          <Spinner animation=\"border\" variant=\"info\" />\n        ) : (\n          (postData || []).map((post) => {\n            const { id, title, description, createdAt, imageURL, likes } = post;\n\n            return (\n              <Col md=\"6\" lg=\"4\" className=\"mb-4\" key={id}>\n                <Card className=\"shadow\">\n                  <Card.Img variant=\"top\" src={imageURL} />\n                  <Card.Body>\n                    <Card.Title>{title}</Card.Title>\n                    <Card.Text className=\"truncated-text\">\n                      {description}\n                    </Card.Text>\n                    <Row>\n                      <Col>\n                        <Button\n                          as={Link}\n                          to={ROUTES.POST + \"/\" + id}\n                          variant=\"outline-secondary\"\n                          block\n                        >\n                          Więcej\n                        </Button>\n                      </Col>\n                      <Col className=\"text-right\">\n                        {user ? (\n                          <LikeButton likes={likes} postId={id} />\n                        ) : (\n                          <OverlayTrigger\n                            key=\"top\"\n                            placement=\"top\"\n                            overlay={\n                              <Tooltip id=\"tooltip-disabled\">\n                                Musisz być zalogowany by móc głosować\n                              </Tooltip>\n                            }\n                          >\n                            <span className=\"d-inline-block\">\n                              <LikeButton likes={likes} postId={id} />\n                            </span>\n                          </OverlayTrigger>\n                        )}\n                      </Col>\n                    </Row>\n                  </Card.Body>\n                  <Card.Footer className=\"text-muted text-center\">\n                    <FontAwesomeIcon icon={faClock} className=\"mr-1\" />\n                    {formatDate(createdAt)}\n                  </Card.Footer>\n                </Card>\n              </Col>\n            );\n          })\n        )}\n      </Row>\n    </Container>\n  );\n};\n\nexport default HomePage;\n","import React from \"react\";\n\nconst Avatar = ({ user, className }) => {\n  const src =\n    user.photoURL ||\n    `https://avatars.dicebear.com/v2/jdenticon/${user.uid}.svg`;\n\n  return (\n    <img\n      alt=\"avatar\"\n      className={className}\n      loading=\"lazy\"\n      src={src}\n      height={38}\n      width={38}\n    />\n  );\n};\n\nexport default Avatar;\n","import React, { useContext } from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Button from \"react-bootstrap/Button\";\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\nimport Nav from \"react-bootstrap/Nav\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { ROUTES } from \"../../constants\";\nimport { useAuth } from \"../../hooks\";\nimport { FirebaseContext } from \"../../context\";\nimport Avatar from \"../../components/avatar\";\n\nconst Header = () => {\n  const history = useHistory();\n  const { user } = useAuth();\n  const { signOut } = useContext(FirebaseContext);\n\n  return (\n    <header>\n      <Navbar className=\"bg-white shadow-sm\" expand=\"sm\">\n        <Navbar.Brand as={Link} to={ROUTES.HOME}>\n          <img\n            src={process.env.PUBLIC_URL + \"/logo.png\"}\n            alt=\"//FIXME logo\"\n            width={30}\n            height={30}\n            className=\"d-inline-block align-top\"\n          />\n          {\"//FIXME\"}\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\" className=\"justify-content-end\">\n          {user ? (\n            <Nav>\n              <Button\n                as={Link}\n                to={ROUTES.POST_NEW}\n                variant=\"outline-info\"\n                className=\"mt-2 mt-sm-0 mr-sm-2\"\n              >\n                Dodaj ogłoszenie\n              </Button>\n\n              <NavDropdown\n                alignRight\n                title={<Avatar user={user} />}\n                id=\"basic-nav-dropdown\"\n                className=\"text-muted mt-2 mt-sm-0\"\n              >\n                <NavDropdown.Item disabled>\n                  {user.displayName || user.email}\n                </NavDropdown.Item>\n                <NavDropdown.Divider />\n                <NavDropdown.Item\n                  as={Button}\n                  onClick={() => {\n                    signOut().then(() => history.push(ROUTES.HOME));\n                  }}\n                >\n                  Wyloguj\n                </NavDropdown.Item>\n              </NavDropdown>\n            </Nav>\n          ) : (\n            <Nav>\n              <Button\n                className=\"mt-2 mt-sm-0 mr-sm-2\"\n                variant=\"outline-secondary\"\n                as={Link}\n                to={ROUTES.LOGIN}\n              >\n                Logowanie\n              </Button>\n              <Button\n                className=\"mt-2 mt-sm-0 mr-sm-2\"\n                variant=\"outline-info\"\n                as={Link}\n                to={ROUTES.REGISTRATION}\n              >\n                Rejestracja\n              </Button>\n            </Nav>\n          )}\n        </Navbar.Collapse>\n      </Navbar>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Header from \"../header\";\n\nconst Layout = ({ children }) => {\n  return (\n    <>\n      <Header />\n\n      <main>{children}</main>\n\n      <footer className=\"footer py-4 mt-2 bg-white\">\n        <Container>\n          <Row className=\"align-items-center justify-content-center\">\n            <div className=\"col-md-4 text-center\">\n              <span className=\"copyright\">\n                Copyright © {new Date().getFullYear()}\n              </span>\n            </div>\n          </Row>\n        </Container>\n      </footer>\n    </>\n  );\n};\n\nexport default Layout;\n","import React, { useContext, useState } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Card from \"react-bootstrap/Card\";\nimport Alert from \"react-bootstrap/Alert\";\nimport { Link } from \"react-router-dom\";\nimport { Formik } from \"formik\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { ROUTES } from \"../../constants\";\nimport { FirebaseContext } from \"../../context\";\nimport { useAuth } from \"../../hooks\";\n\nconst NewPostForm = ({ children }) => {\n  const { createPost, getImage } = useContext(FirebaseContext);\n  const [postURL, setPostURL] = useState(\"\");\n  const { user } = useAuth();\n\n  const handleSubmit = (values, { setSubmitting }) => {\n    const { title, description, address, image } = values;\n    const postId = uuidv4();\n\n    setSubmitting(true);\n\n    getImage(postId)\n      .put(image)\n      .on(\n        \"state_changed\",\n        () => {},\n        (err) => {\n          console.error(err);\n        },\n        async () => {\n          const imageURL = await getImage(postId).getDownloadURL();\n\n          await createPost(postId, {\n            title,\n            description,\n            address: address.place_name,\n            coordinates: address.center,\n            imageURL,\n            authorId: user.uid,\n            createdAt: Date.now(),\n          });\n\n          setPostURL(postId);\n          setSubmitting(false);\n        }\n      );\n  };\n\n  if (!user) {\n    return <Alert variant=\"danger\">Zaloguj się by dodać post</Alert>;\n  }\n\n  return (\n    <Container className=\"my-5\">\n      <Row className=\"justify-content-center\">\n        {postURL && (\n          <Alert\n            variant=\"success\"\n            className=\"col-xs-10\"\n            onClose={() => setPostURL(\"\")}\n            dismissible\n          >\n            <Alert.Heading>Dodałeś nowe ogłoszenie</Alert.Heading>\n            Przejdź\n            <Alert.Link\n              as={Link}\n              to={ROUTES.POST + \"/\" + postURL}\n              className=\"ml-1 mr-1\"\n            >\n              do ogłoszenia\n            </Alert.Link>\n            lub\n            <Alert.Link as={Link} to={ROUTES.HOME} className=\"ml-1\">\n              do strony głównej\n            </Alert.Link>\n            .\n          </Alert>\n        )}\n        <Col xs={12} md={8}>\n          <Card className=\"shadow\">\n            <Card.Body>\n              <Card.Title className=\"text-center mb-2\">\n                Nowe ogłoszenie\n              </Card.Title>\n              <Formik\n                onSubmit={handleSubmit}\n                initialValues={{\n                  title: \"\",\n                  description: \"\",\n                  address: {\n                    place_name: \"\",\n                    center: [],\n                  },\n                  image: \"\",\n                }}\n                validate={(values) => {\n                  const errors = {};\n                  if (!values.title) {\n                    errors.title = \"Tytuł wymagany\";\n                  }\n                  if (!values.description) {\n                    errors.description = \"Opis wymagany\";\n                  }\n                  if (!values.address.place_name) {\n                    errors.address = \"Adres wymagany\";\n                  }\n                  if (!values.image) {\n                    errors.image = \"Zdjęcie wymagane\";\n                  }\n                  if (values.address.place_name && !values.address.center) {\n                    errors.address =\n                      \"Niepoprawny lub niepełny adres, skorzystaj z wyszukiwarki\";\n                  }\n\n                  return errors;\n                }}\n              >\n                {(state) => children(state)}\n              </Formik>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default NewPostForm;\n","import React, { useEffect, useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Spinner from \"react-bootstrap/esm/Spinner\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport { useDebounce } from \"../../hooks\";\nimport NewPostForm from \"../../components/new-post-form\";\nimport { searchAddress } from \"../../utils\";\n\nconst NewPost = () => {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [results, setResults] = useState({});\n  const [isSearching, setIsSearching] = useState(false);\n  const debouncedSearchTerm = useDebounce(searchTerm);\n\n  useEffect(() => {\n    if (debouncedSearchTerm) {\n      setIsSearching(true);\n      searchAddress(debouncedSearchTerm).then((result) => {\n        setIsSearching(false);\n\n        const r = result.length\n          ? result.reduce((prev, next) => {\n              if (!(next.id in prev)) {\n                prev[next.id] = {\n                  place_name: next.place_name,\n                  center: next.center,\n                };\n              }\n\n              return prev;\n            }, {})\n          : {};\n        setResults(r);\n      });\n    } else {\n      setResults({});\n    }\n  }, [debouncedSearchTerm]);\n\n  return (\n    <NewPostForm>\n      {({\n        handleSubmit,\n        handleChange,\n        handleBlur,\n        values,\n        touched,\n        errors,\n        setFieldValue,\n        setFieldError,\n        isSubmitting,\n      }) => {\n        return (\n          <Form noValidate onSubmit={handleSubmit}>\n            <Form.Group controlId=\"formTitle\">\n              <Form.Label>Tytuł</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"title\"\n                autoComplete=\"off\"\n                value={values.title}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                isInvalid={touched.title && !!errors.title}\n                isValid={touched.title && !errors.title}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.title}\n              </Form.Control.Feedback>\n            </Form.Group>\n\n            <Form.Group controlId=\"formDescription\">\n              <Form.Label>Opis</Form.Label>\n              <Form.Control\n                type=\"text\"\n                as=\"textarea\"\n                rows=\"3\"\n                name=\"description\"\n                autoComplete=\"off\"\n                value={values.description}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                isInvalid={touched.description && !!errors.description}\n                isValid={touched.description && !errors.description}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.description}\n              </Form.Control.Feedback>\n            </Form.Group>\n\n            <Form.Group controlId=\"formAddress\">\n              <Form.Label>Adres</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"address\"\n                autoComplete=\"off\"\n                value={values.address.place_name}\n                onChange={(e) => {\n                  setFieldValue(\"address\", {\n                    ...values.address,\n                    place_name: e.target.value,\n                  });\n                  setSearchTerm(e.currentTarget.value);\n                }}\n                onBlur={handleBlur}\n                isInvalid={touched.address && !!errors.address}\n                isValid={touched.address && !errors.address}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.address}\n              </Form.Control.Feedback>\n            </Form.Group>\n\n            <ListGroup>\n              {!isSearching &&\n                Boolean(Object.keys(results).length) &&\n                Object.keys(results).map((id) => {\n                  const location = results[id];\n\n                  return (\n                    <ListGroup.Item\n                      key={id}\n                      action\n                      onClick={(e) => {\n                        e.preventDefault();\n                        setFieldValue(\"address\", {\n                          place_name: location.place_name,\n                          center: location.center,\n                        });\n                        setResults({});\n                        setSearchTerm(\"\");\n                      }}\n                    >\n                      {location.place_name}\n                    </ListGroup.Item>\n                  );\n                })}\n              {isSearching && (\n                <ListGroup.Item className=\"d-flex mb-2 align-items-center\">\n                  <Spinner animation=\"border\" variant=\"info\" className=\"mr-2\" />\n                  Szukam...\n                </ListGroup.Item>\n              )}\n            </ListGroup>\n\n            <Form.Group controlId=\"formImage\">\n              <Form.Label>Zdjęcie</Form.Label>\n              <Form.File id=\"form-image-custom\" custom>\n                <Form.File.Input\n                  name=\"image\"\n                  accept=\"image/*\"\n                  isInvalid={touched.image && !!errors.image}\n                  isValid={touched.image && !errors.image}\n                  onBlur={handleBlur}\n                  onChange={({ target: { files } }) => {\n                    const file = files[0];\n                    if (file.type && file.type.split(\"/\")[0] !== \"image\") {\n                      setFieldError(\"image\", \"Niewłaściwy format obrazu\");\n                      setFieldValue(\"image\", \"\");\n                      return;\n                    }\n                    setFieldValue(\"image\", file);\n                  }}\n                />\n                <Form.File.Label data-browse=\"Wybierz zdjęcie\">\n                  {values.image.name || \"Nie wybrano zdjęcia\"}\n                </Form.File.Label>\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.image}\n                </Form.Control.Feedback>\n              </Form.File>\n            </Form.Group>\n\n            <Button\n              disabled={isSubmitting}\n              type=\"submit\"\n              variant=\"info\"\n              className=\"mt-2 mx-auto float-right\"\n            >\n              Stwórz nowe ogłoszenie\n            </Button>\n          </Form>\n        );\n      }}\n    </NewPostForm>\n  );\n};\n\nexport default NewPost;\n","import React, { useState, useContext } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Container from \"react-bootstrap/Container\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Card from \"react-bootstrap/Card\";\nimport { Formik } from \"formik\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faGoogle, faGithub } from \"@fortawesome/free-brands-svg-icons\";\nimport { FirebaseContext } from \"../../context\";\nimport { ERRORS, ROUTES } from \"../../constants\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { useAuth } from \"../../hooks\";\n\nconst AuthForm = ({ isLoginForm }) => {\n  const {\n    signInWithEmailAndPassword,\n    createUserWithEmailAndPassword,\n    signInWithGoogle,\n    signInWithGithub,\n    createUser,\n  } = useContext(FirebaseContext);\n  const history = useHistory();\n  const { user } = useAuth();\n  const [submitError, setSubmitError] = useState(\"\");\n\n  const authForm = async (cb, setIsLoading) => {\n    setIsLoading(true);\n    setSubmitError(\"\");\n\n    try {\n      const data = await cb;\n      const { uid, displayName, email, photoURL } = data.user;\n\n      if (data.additionalUserInfo.isNewUser) {\n        await createUser(uid, {\n          displayName,\n          email,\n          photoURL,\n        });\n      }\n      setIsLoading(false);\n      history.push(ROUTES.HOME);\n    } catch (err) {\n      setIsLoading(false);\n\n      if (ERRORS[err.code]) {\n        setSubmitError(ERRORS[err.code]);\n      } else {\n        setSubmitError(err.code);\n      }\n    }\n  };\n\n  if (user) {\n    return (\n      <Alert variant=\"info\">\n        {`Już jesteś ${\n          isLoginForm ? \"zalogowany\" : \"zarejestrowany\"\n        }. Przejdź do `}\n        <Link to={ROUTES.HOME}>strony głównej.</Link>\n      </Alert>\n    );\n  }\n\n  return (\n    <Container className=\"mt-5\">\n      <Row className=\"justify-content-md-center\">\n        <Col xs md={6}>\n          <Formik\n            onSubmit={async (values, { setSubmitting }) => {\n              await authForm(\n                (isLoginForm\n                  ? signInWithEmailAndPassword\n                  : createUserWithEmailAndPassword)(\n                  values.email,\n                  values.password\n                ),\n                setSubmitting\n              );\n            }}\n            initialValues={{\n              email: \"\",\n              password: \"\",\n            }}\n            validate={(values) => {\n              const errors = {};\n\n              if (!values.email) {\n                errors.email = \"Email wymagany\";\n              }\n              if (\n                values.email &&\n                !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n              ) {\n                errors.email = \"Nieprawidłowy adres email\";\n              }\n              if (!values.password) {\n                errors.password = \"Hasło wymagane\";\n              }\n\n              return errors;\n            }}\n          >\n            {({\n              handleSubmit,\n              handleBlur,\n              handleChange,\n              values,\n              touched,\n              errors,\n              isSubmitting,\n              setSubmitting,\n            }) => (\n              <Card className=\"shadow\">\n                <Card.Body>\n                  <Card.Title className=\"text-center mb-3\">\n                    {isLoginForm ? \"Zaloguj się\" : \"Zarejestruj się\"}\n                  </Card.Title>\n                  <Form onSubmit={handleSubmit}>\n                    <Form.Group controlId=\"formEmail\">\n                      <Form.Label>Email</Form.Label>\n                      <Form.Control\n                        type=\"email\"\n                        name=\"email\"\n                        autoComplete=\"username\"\n                        value={values.email}\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        isInvalid={\n                          (touched.email && !!errors.email) || submitError\n                        }\n                        isValid={touched.email && !errors.email}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.email}\n                      </Form.Control.Feedback>\n                      <Form.Control.Feedback type=\"valid\" />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formPassword\">\n                      <Form.Label>Hasło</Form.Label>\n                      <Form.Control\n                        type=\"password\"\n                        name=\"password\"\n                        autoComplete={`${\n                          isLoginForm ? \"current\" : \"new\"\n                        }-password`}\n                        onBlur={handleBlur}\n                        value={values.password}\n                        onChange={handleChange}\n                        isInvalid={\n                          (touched.password && !!errors.password) || submitError\n                        }\n                        isValid={touched.password && !errors.password}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.password}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n\n                    {submitError && (\n                      <Alert variant=\"danger\">{submitError}</Alert>\n                    )}\n\n                    <div className=\"text-right\">\n                      <Button\n                        disabled={isSubmitting}\n                        type=\"submit\"\n                        variant=\"info\"\n                      >\n                        {isLoginForm ? \"Zaloguj się\" : \"Zarejestruj się\"}\n                      </Button>\n                    </div>\n                  </Form>\n                </Card.Body>\n                {isLoginForm && (\n                  <Card.Footer className=\"bg-white\">\n                    <Row>\n                      <Col>\n                        <Button\n                          disabled={isSubmitting}\n                          variant=\"outline-danger\"\n                          block\n                          onClick={async () =>\n                            await authForm(signInWithGoogle(), setSubmitting)\n                          }\n                        >\n                          <FontAwesomeIcon icon={faGoogle} className=\"mr-2\" />\n                          Google\n                        </Button>\n                      </Col>\n                      <Col>\n                        <Button\n                          disabled={isSubmitting}\n                          variant=\"outline-dark\"\n                          block\n                          onClick={async () =>\n                            await authForm(signInWithGithub(), setSubmitting)\n                          }\n                        >\n                          <FontAwesomeIcon icon={faGithub} className=\"mr-2\" />\n                          Github\n                        </Button>\n                      </Col>\n                    </Row>\n                  </Card.Footer>\n                )}\n              </Card>\n            )}\n          </Formik>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default AuthForm;\n","import React, { useContext, useEffect } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Card from \"react-bootstrap/Card\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport Button from \"react-bootstrap/Button\";\nimport { useAuth } from \"../../hooks\";\nimport { FirebaseContext } from \"../../context\";\nimport Avatar from \"../avatar\";\nimport { formatDate } from \"../../utils\";\n\nconst PostComments = ({ postId }) => {\n  const { getPostComments, getUser } = useContext(FirebaseContext);\n  const [comment, setComment] = React.useState(\"\");\n  const [isLoading, setLoading] = React.useState(false);\n  const [commentsData, setCommentsData] = React.useState([]);\n  const { user } = useAuth();\n\n  useEffect(() => {\n    setLoading(true);\n\n    const unsubscribe = getPostComments(postId).onSnapshot(\n      async (querySnapshot) => {\n        const data = await Promise.all(\n          querySnapshot.docs.map(async (documentSnapshot) => {\n            const docData = documentSnapshot.data();\n            const userDoc = await getUser(docData.authorId);\n\n            return {\n              id: documentSnapshot.id,\n              ...docData,\n              author: {\n                uid: docData.authorId,\n                ...userDoc,\n              },\n            };\n          })\n        );\n\n        setLoading(false);\n        setCommentsData(await data);\n      }\n    );\n\n    return () => {\n      unsubscribe();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setComment(\"\");\n\n    getPostComments(postId)\n      .add({\n        authorId: user.uid,\n        createdAt: Date.now(),\n        value: comment,\n      })\n      .catch((err) => {\n        console.log(\"addComment\", err);\n      });\n  };\n\n  return (\n    <>\n      <h4>Komentarze</h4>\n      <Card className=\"shadow mb-4\">\n        <Card.Body>\n          {isLoading && (\n            <div className=\"d-flex justify-content-center align-items-center p-5\">\n              <Spinner animation=\"border\" variant=\"info\" />\n            </div>\n          )}\n          {!isLoading && (\n            <>\n              {commentsData.length > 0 ? (\n                <ul className=\"list-unstyled\">\n                  {commentsData.map((comment, index) => {\n                    return (\n                      <li key={comment.id}>\n                        {index > 0 && <hr />}\n\n                        <div className=\"d-flex align-items-center mb-2\">\n                          <Avatar\n                            className=\"rounded mr-2\"\n                            user={comment.author}\n                          />\n                          <h5\n                            className=\"mb-0 flex-grow-1 d-inline-block text-truncate\"\n                            title={\n                              comment.author.displayName || comment.author.email\n                            }\n                          >\n                            {comment.author.displayName || comment.author.email}\n                          </h5>\n                          <span className=\"text-right\">\n                            {formatDate(comment.createdAt)}\n                          </span>\n                        </div>\n                        <p>{comment.value}</p>\n                      </li>\n                    );\n                  })}\n                </ul>\n              ) : (\n                <p className=\"m-0\">Brak komentarzy.</p>\n              )}\n            </>\n          )}\n        </Card.Body>\n      </Card>\n\n      <h4>Dodaj komentarz</h4>\n      <Card className=\"shadow mb-4\">\n        <Card.Body>\n          {user ? (\n            <>\n              <div className=\"d-flex align-items-center mb-2\">\n                <Avatar className=\"rounded mr-2\" user={user} />\n                <h5 className=\"mb-0\">{user.displayName || user.email}</h5>\n              </div>\n              <Form onSubmit={handleSubmit}>\n                <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                  <Form.Control\n                    value={comment}\n                    onChange={(e) => setComment(e.target.value)}\n                    as=\"textarea\"\n                    rows=\"3\"\n                  />\n                </Form.Group>\n                <Button\n                  disabled={!comment}\n                  variant=\"info\"\n                  type=\"submit\"\n                  className=\"float-right\"\n                >\n                  Dodaj\n                </Button>\n              </Form>\n            </>\n          ) : (\n            <p className=\"m-0\">Musisz być zalogowany by dodać komentarz.</p>\n          )}\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nexport default PostComments;\n","import React, { useContext, useEffect, lazy, Suspense } from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Image from \"react-bootstrap/Image\";\nimport Container from \"react-bootstrap/Container\";\nimport Card from \"react-bootstrap/Card\";\nimport { FirebaseContext } from \"../../context\";\nimport { formatDate } from \"../../utils\";\nimport PostComments from \"../../components/post-comments\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport Avatar from \"../../components/avatar\";\nconst Map = lazy(() => import(\"./map\"));\n\nconst SinglePost = ({\n  match: {\n    params: { postId },\n  },\n}) => {\n  const { getPost, getUser } = useContext(FirebaseContext);\n  const [data, setData] = React.useState({});\n  const [isLoading, setLoading] = React.useState(true);\n\n  useEffect(() => {\n    const loadPost = async () => {\n      setLoading(true);\n\n      try {\n        const postDoc = await getPost(postId).get();\n\n        if (postDoc.exists) {\n          const data = postDoc.data();\n          const userDoc = await getUser(data.authorId);\n\n          setData({\n            ...data,\n            author: {\n              ...userDoc,\n              uid: data.authorId,\n            },\n          });\n        }\n      } catch (e) {\n        console.error(\"loadPost\", e);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadPost();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n      <section className=\"placeholder-map shadow d-flex justify-content-center align-items-center\">\n        <Suspense fallback={<Spinner animation=\"grow\" variant=\"light\" />}>\n          {!isLoading && data.coordinates && (\n            <Map coordinates={data.coordinates} />\n          )}\n        </Suspense>\n      </section>\n      <Container as=\"section\" className=\"post-container\">\n        <Row className=\"justify-content-center\">\n          <Col md=\"10\">\n            <Card className=\"shadow mb-4\">\n              {isLoading ? (\n                <div className=\"d-flex justify-content-center align-items-center p-5\">\n                  <Spinner animation=\"border\" variant=\"info\" />\n                </div>\n              ) : (\n                <Card.Body>\n                  <h1>{data.title}</h1>\n                  <hr />\n                  <div className=\"d-flex align-items-center\">\n                    <Avatar className=\"rounded mr-2\" user={data.author} />\n                    <span className=\"flex-grow-1 text-truncate\">\n                      {data.author.displayName || data.author.email}\n                    </span>\n                    <span className=\"text-right\">\n                      {formatDate(data.createdAt)}\n                    </span>\n                  </div>\n                  <hr />\n                  <Image\n                    fluid\n                    rounded\n                    src={data.imageURL}\n                    alt=\"zdjecie\"\n                    className=\"mb-2\"\n                  />\n                  <p>{data.address}</p>\n                  <hr />\n                  <p>{data.description}</p>\n                </Card.Body>\n              )}\n            </Card>\n          </Col>\n          <Col md=\"10\" className=\"\">\n            <PostComments postId={postId} />\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nexport default SinglePost;\n","import React from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport Card from \"react-bootstrap/Card\";\nimport Carousel from \"react-bootstrap/Carousel\";\nimport { ROUTES } from \"../../constants\";\nimport { Link } from \"react-router-dom\";\n\nconst SplashScreen = () => {\n  const links = [\n    {\n      href: process.env.REACT_APP_WIZARD_LINK,\n      label: \"Link do aplikacji na serwerze Wizard\",\n    },\n    {\n      href: process.env.REACT_APP_REPO_LINK,\n      label: \"Link do repozytorium projektu na GitHub\",\n    },\n    {\n      href: process.env.REACT_APP_PROJECT_LINK,\n      label: \"Link do zarządzania projektem informatycznym na GitHub\",\n    },\n    {\n      href: process.env.REACT_APP_PROTOTYPE_LINK,\n      label:\n        \"Link do interaktywnego prototypu aplikacji (hasło: \" +\n        process.env.REACT_APP_PROTOTYPE_PASSWORD +\n        \")\",\n    },\n  ];\n\n  const slides = [\n    {\n      src: \"/images/responsive.png\",\n      text: \"Responsywność\",\n    },\n    {\n      src: \"/images/home.png\",\n      text: \"Strona główna\",\n    },\n    {\n      src: \"/images/single-post.png\",\n      text: \"Ogłoszenie\",\n    },\n    {\n      src: \"/images/comments.png\",\n      text: \"Komentarze\",\n    },\n    {\n      src: \"/images/sign-in.png\",\n      text: \"Logowanie\",\n    },\n    {\n      src: \"/images/register.png\",\n      text: \"Rejestracja\",\n    },\n    {\n      src: \"/images/new-post.png\",\n      text: \"Nowe ogłoszenie\",\n    },\n  ];\n\n  return (\n    <Container className=\"mt-5 mb-5\">\n      <Row className=\"justify-content-center\">\n        <Col lg={8} className=\"mb-4\">\n          <Card className=\"shadow\">\n            <Card.Body>\n              <Card.Text>\n                <p>\n                  Aplikacja <strong>{\"//FIXME\"}</strong> została zaprojektowana, aby\n                  w sposób intuicyjny pozwolić użytkownikowi zgłaszać zauważone\n                  w przestrzeni miejskiej usterki, czy problemy.\n                </p>\n                <p>\n                  Głównym celem aplikacji jest spełnienie funkcji informacyjnej\n                  oraz sprawnej komunikacji między mieszkańcami, a instytucjami\n                  decyzyjnymi. Ponadto ma za zadanie scalić interesy mieszkańców\n                  oraz wzbudzić w nich poczucie tożsamości z miejscem w którym\n                  żyją na co dzień.\n                  <br />\n                  Każdy zainteresowany, może bez przeszkód przeglądać ogłoszenia\n                  innych użytkowników, a po założeniu konta oraz zalogowaniu\n                  dodatkowo dodawać nowe wraz ze zdjęciem, a także lajkować i\n                  komentować posty.\n                </p>\n                <Carousel className=\"mb-3 text-dark\">\n                  {slides.map((slide) => (\n                    <Carousel.Item color=\"black\">\n                      <img\n                        className=\"d-block w-100\"\n                        src={process.env.PUBLIC_URL + slide.src}\n                        alt={slide.text}\n                      />\n                      <Carousel.Caption>\n                        <h3 className=\"text-dark\">{slide.text}</h3>\n                      </Carousel.Caption>\n                    </Carousel.Item>\n                  ))}\n                </Carousel>\n              </Card.Text>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col lg={4}>\n          <Card className=\"shadow\">\n            <Card.Body>\n              <Card.Text>\n                <p>\n                  Całość jest w pełni responsywna, użytkownik może z niej\n                  korzystać na urządzeniach stacjonarnych oraz mobilnych.\n                  <br />\n                  W projekcie zastosowano PWA - Progressive Web App (Progresywną\n                  Aplikację Internetową), co umożliwia instalację aplikacji, a\n                  także wpływa na szybkość działania.\n                  <br />\n                  Uwierzytelnianie użytkowników odbywa się poprzez użycie loginu\n                  i hasła oraz z wykorzystaniem konta Google lub GitHub.\n                  <br />\n                  Firebase Cloud Firestore oraz Cloud Storage zostały\n                  wykorzystane do synchronizacji oraz przechowywania i\n                  przetwarzania danych multimedialnych.\n                </p>\n                <Link to={ROUTES.HOME}>Link do aplikacji na Github Page</Link>\n                {links.map((link) => (\n                  <a\n                    className=\"d-block mb-1\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    href={link.href}\n                  >\n                    {link.label}\n                  </a>\n                ))}\n              </Card.Text>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default SplashScreen;\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport HomePage from \"./home-page\";\nimport { ROUTES } from \"../constants\";\nimport Layout from \"./layout\";\nimport NewPost from \"./new-post\";\nimport AuthForm from \"../components/auth-form\";\nimport SinglePost from \"./single-post\";\nimport SplashScreen from \"./splash-screen\";\n\nconst LogIn = () => <AuthForm isLoginForm />;\nconst Registration = () => <AuthForm />;\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <Layout>\n        <Switch>\n          <Route exact path={ROUTES.ROOT} component={SplashScreen} />\n          <Route path={ROUTES.HOME} component={HomePage} />\n          <Route path={ROUTES.REGISTRATION} component={Registration} />\n          <Route path={ROUTES.LOGIN} component={LogIn} />\n          <Route path={ROUTES.POST_NEW} component={NewPost} />\n          <Route path={ROUTES.POST + \"/:postId\"} component={SinglePost} />\n        </Switch>\n      </Layout>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { FirebaseProvider } from \"./context\";\nimport App from \"./views\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"./styles.css\";\n\nReactDOM.render(\n  <FirebaseProvider>\n    <App />\n  </FirebaseProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}